import React, { useEffect } from 'react'
import categorycss from '../categories/categories.module.css'
import { useState } from 'react'
import AddIcon from '@mui/icons-material/Add';
import Modal from 'react-bootstrap/Modal';
import Box from '@mui/material/Box';
import InputLabel from '@mui/material/InputLabel';
import MenuItem from '@mui/material/MenuItem';
import FormControl from '@mui/material/FormControl';
import Select from '@mui/material/Select';
import AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';
import CancelIcon from '@mui/icons-material/Cancel';
import uploadFileToBlob, { isStorageConfigured } from '../azure-storage-blob.ts';
import CircularProgress from '@mui/material/CircularProgress';
import loading from '../../images/loading.gif'
import done from '../../images/done.gif'
import { Link } from 'react-router-dom';
import Skeleton from '@mui/material/Skeleton';
import Item_modal from '../item_modal/Item_modal';



function Categories() {
  const [categories, setcategories] = useState([])
  const [button_color, setbutton_color] = useState('#ECC5FB')

  // this array is just made to get 4 instance of loading card
  const loading_cards = [1,2,3,4,5,6]   
  // const [item_images, setitem_images] = useState([])
  // const [item_images_preview, setitem_images_preview] = useState([])
  // const [image_urls, setimage_urls] = useState([])
  const handle_modal = (value) =>{
    setShow(value)
    setbutton_color('#ECC5FB'); 
  }

  // function handle_modal(value){
  //   setShow(value)
  // }

  const [show, setShow] = useState(false);
  const handleShow = () => setShow(true);
  // const [current_modal, setcurrent_modal] = useState(1)
  // const [item_info, setitem_info] = useState({category_name:'' , item_name:''})
  // const handleClose = () => {
  //   setShow(false); 
  //   setbutton_color('#ECC5FB'); 
  //   setitem_images_preview([]);
  //   setitem_images([]);
  //   setitem_info({category_name:'' , item_name:''})
  //   setcurrent_modal(1)
  //   };

  // const handleChange = (e) => {
  //   const name= e.target.name;
  //   const value = e.target.value
  //   console.log(name, value)
  //   setitem_info({...item_info , [name]:value});
  // };

  // const save_images = (e)=>{
  //   let file_path = e.target.files[0]

  //   if(file_path!=undefined){
  //     setitem_images_preview([...item_images_preview, URL.createObjectURL(file_path)])
  //     setitem_images([...item_images, file_path])

  //   }
  // }
  
  // function remove_image(index){
  //   let image_preview = [...item_images_preview]
  //   image_preview.splice(index, 1);

  //   let images = [...item_images]
  //   images.splice(index, 1);

  //   setitem_images_preview(image_preview)
  //   setitem_images(images)
  // }

  
  function button_handler(){
    setbutton_color('#FFFDE3')
    handleShow()
  }

  const categories_data = async() =>{
    const res = await fetch('/category_data',{
        method:'GET',
        headers:{
            'Content-Type' : 'application/json',
            'x-auth-token' : localStorage.getItem('token'),
        }
    })
    const data = await res.json();
    setcategories(data.categories)
}

// const save_item = async() =>{

//   let image_urls = []
//   for (let i = 0; i < item_images.length; i++) {
//     const file_url = await uploadFileToBlob(item_images[i]);
//     image_urls.push(file_url)
//   }
//   console.log(localStorage.getItem('token'),'this is jwt')
  
//   const res = await fetch('/save_item',{
//       method:'POST',
//       headers:{
//           'Content-Type' : 'application/json',
//           'x-auth-token' : localStorage.getItem('token'),
//       },
//       body:JSON.stringify({
//         item_info:item_info , image_urls:image_urls
//     }),
//   })
//   const data = await res.json();
//   if(data.status==202){
//     setcurrent_modal(3)
//   }
// }

// function change_current_modal(){
//   setcurrent_modal(2)
// }


useEffect(()=>{
  categories_data()
},[])

  // function add_item_modal(){
  //   return(
  //     <Modal className={categorycss.modal}
  //       show={show}
  //       onHide={handleClose}
  //       backdrop="static"
  //       keyboard={false}
  //       centered
  //     >
  //       {
  //         current_modal==1?
  //         <>
  //           <div className={categorycss.modal_main_wrap}>
  //         <div className={categorycss.modal_main}>
  //           <div className={categorycss.modal_components} id={categorycss.modal_item_1}>Add new item</div>
  //           <div className={categorycss.modal_components} id={categorycss.modal_item_2}>Select Category</div>
  //           <div className={categorycss.modal_components} id={categorycss.modal_item_3}>
  //               <Box sx={{ minWidth: 120}}>
  //                 <FormControl size='small' fullWidth>
  //                   <InputLabel id="demo-simple-select-label">Categories</InputLabel>
  //                   <Select
  //                     labelId="demo-simple-select-label"
  //                     id="demo-simple-select"
  //                     value={item_info.category_name}
  //                     label="Categories"
  //                     name='category_name'
  //                     onChange={handleChange}
  //                   >
  //                     {
  //                         categories.map((elem,index)=>{
  //                             return(
  //                               <MenuItem key={index} value={elem.category_name}  className={categorycss.dropdown_color}>{elem.category_name}</MenuItem>
  //                             )
  //                         })        
  //                     }
  //                   </Select>
  //                 </FormControl>
  //               </Box>
  //           </div>
  //           <div className={categorycss.modal_components} id={categorycss.modal_item_4}>
  //             Item Name
  //           </div>
  //           <div className={categorycss.modal_components} id={categorycss.modal_item_5}>
  //             <input type="text" value={item_info.item_name} name='item_name' onChange={handleChange} placeholder='Enter Item Name' />
  //           </div>
  //           <div className={categorycss.modal_components} id={categorycss.modal_item_6}>
  //                   {
  //                     item_images_preview.length==0?
  //                     <div className={categorycss.added_images} style={{display:'none'}}></div>
  //                     :
  //                     item_images_preview.map((elem,index)=>{
  //                         return(
  //                             <div key={index} className={categorycss.added_images}>
  //                               <img src={elem} className={categorycss.modal_images} alt="item image"/>
  //                               <div className={categorycss.image_cross}>
  //                                 <CancelIcon fontSize='small' onClick={()=>{remove_image(index)}}></CancelIcon>
  //                               </div>
  //                             </div>
  //                         )
  //                       })
  //                   }
  //           </div>
  //           <div className={categorycss.modal_components} id={categorycss.modal_item_7}>
  //             <div className={categorycss.add_image_button}>
  //             <label htmlFor='add_image'>
  //               <AddPhotoAlternateIcon></AddPhotoAlternateIcon>
  //               Add image
  //             </label>
  //             <input type="file" name="photo" id='add_image' onChange={save_images} hidden />
                
  //             </div>
  //           </div>
  //           <div className={categorycss.modal_components} id={categorycss.modal_item_8}>
  //             <div className={categorycss.modal_final_buttons} id={categorycss.cancel_button} onClick={handleClose}>Cancel</div>
  //             <div className={categorycss.modal_final_buttons} id={categorycss.save_button} onClick={()=>{change_current_modal(); save_item()}}>Add item</div>
  //           </div>
  //         </div>
  //           </div>
  //         </>
  //         :
  //         current_modal==2?
  //         <>
  //           <div className={categorycss.loading_screen}>
  //             <img src={loading} alt="" />
  //             <div className={categorycss.loading_text}>Adding Item please wait</div>
  //           </div>
  //         </>
  //         :
  //         <>
  //           <div className={categorycss.done}>
  //             <img src={done} alt="" />
  //             <div>Item Added</div>
  //             <div className={categorycss.close} onClick={handleClose}>Close</div>
  //           </div>
  //         </>
          
  //       }
       
  //     </Modal>
  //   )
  // }

  console.log(categories.length , 'this is length')

  return (
    <div className={categorycss.main}>
      {
        categories.length==0?
        loading_cards.map((elem,key)=>{
          return(
            <div className={categorycss.loading_card}>
              <Skeleton sx={{'border-radius':'20px'}} variant="rounded" height='100%' width="100%">
              </Skeleton>
            </div>
          )
        })
        :
        categories.map((elem,key)=>{
          return(
            <div className={categorycss.card_wrap}>
              <Link to={`/categories/${elem.category_name}`}  key={key} className={categorycss.card}>
                <img src={elem.category_image} alt="" />
                <div className={categorycss.heading}>{elem.category_name}</div>
              </Link>
            </div>
            
          )
          
        })
      }
        <div className={categorycss.add_item} style={{backgroundColor:`${button_color}`}} onClick={button_handler}>
            <AddIcon fontSize='large'></AddIcon>
      </div>
      {
        show==true?
        <>
                <Item_modal categories ={categories} handle_modal = {handle_modal} ></Item_modal>

        </>
        :
        <></>
      }

        
    </div>
  )
}

export default Categories